//Articuno Systems
//Project Manager: Bradley Hartman
//Hardware Engineer: Dylan Hromcik
//Integration Engineer: Nathan Armstrong
//Software Engineer: Hyun Ki David Lee
//---------------
//Made by Hyun Ki David Lee
//mainAlpha

#include <WiFi.h> // ESP32 WiFi include
#include <HTTPClient.h>
#include <Arduino_JSON.h>

void setup(){

//SETUP PINS----------
  pinMode(##, OUT): //Set Relay1 pin to OUT
  pinMode(##, OUT): //Set Relay2 pin to OUT
  pinMode(##, OUT): //Set Relay3 pin to OUT
  pinMode(##, OUT): //Set Relay4 pin to OUT
  pinMode(##, OUT):
  
//SETUP VARIABLES----------
  float flowMain = 0.000; //Flow Rate from Main
  float flow1 = 0.000; //Flow Rate from Zone 2
  float flow2 = 0.000; //Flow Rate from Zone 3
  float flow3 = 0.000; //Flow Rate from Zone 4
  float sumZone = 0.000; //Flow Rate for Sum of Zones
  int lastWater = 0000000; //the time of the last run watering cycle
  
//CONNECT TO WIFI----------
  Serial.begin(9600);
  ConnectToWiFi();
}

//--------------------------------
void loop(){

//COLLECT WEATHER DATA----------
  //check wifi connection
  //if no connection (notfiy user)
  //else, download weather data
  
//UPDATE FLOW RATE DATA----------
  //import flow data from sensor controller (needs research)
  flowMain = ___ //update flow data for Main Pipe
  flow1 = ___ //update flow data for Zone 1
  flow2 = ___ //update flow data for Zone 2
  flow3 = ___ //update flow data for Zone 3
  
//FREEZE CHECK----------
  if("Temperature below freezing){ //Temperature is too cold
  Serial.write("Conducting Freeze Purge. \n") //Serial message
  digitalWrite(##, HIGH): //Turn ON Purge Status LED
  digitalWrite(##, LOW): //Close Main Valve
  digitalWrite(##, LOW): //Close Valve 1
  digitalWrite(##, LOW): //Close Valve 2
  digitalWrite(##, LOW): //Close Valve 3
  digitalWrite(##, HIGH): //Turn ON Compressor Relay
  
  Serial.write("Purging Zone 1. \n") //Serial message
  digitalWrite(##, HIGH): //Open Valve 1
  delay(#00000) //Run air cycle for # amount of time
  digitalWrite(##, LOW): //Close Valve 1
      
  Serial.write("Purging Zone 2. \n") //Serial message
  digitalWrite(##, HIGH): //Open Valve 2
  delay(#00000) //Run air cycle for # amount of time
  digitalWrite(##, LOW): //Close Valve 2
      
  Serial.write("Purging Zone 3. \n") //Serial message
  digitalWrite(##, HIGH): //Open Valve 3
  delay(#00000) //Run air cycle for # amount of time
  digitalWrite(##, LOW): //Close Valve 3
  
  digitalWrite(##, LOW): //Turn OFF Compressor Relay
  
  }
  else{ //Temperature is warm enough
  
  //WATERING CHECK----------
    currentTime = #####: //record current time as variable
    waterDiff = currentTime - lastWater: // time between now and last water
    if("waterDiff >> ####"){ //Enough time has passed since the last watering
      Serial.write("Conducting Watering. \n") //Serial message
      
      Serial.write("Watering Zone 1. \n") //Serial message
      digitalWrite(##, HIGH): //Open Valve 1
      delay(#00000) //Run water cycle for # amount of time
      digitalWrite(##, LOW): //Close Valve 1
      
      Serial.write("Watering Zone 2. \n") //Serial message
      digitalWrite(##, HIGH): //Open Valve 2
      delay(#00000) //Run water cycle for # amount of time
      digitalWrite(##, LOW): //Close Valve 2
      
      Serial.write("Watering Zone 3. \n") //Serial message
      digitalWrite(##, HIGH): //Open Valve 3
      delay(#00000) //Run water cycle for # amount of time
      digitalWrite(##, LOW): //Close Valve 3
      delay(#00000) //Run water cycle for # amount of time
      
      Serial.write("Finished with Watering. \n") //Serial message
      lastWater = #######: //update "time of last water" with current time
    }
    else{
      Serial.write("Waiting to Water. \n") //Serial message
    }
    
  //LEAK & CLOG CHECK----------
  sumZone = flow1 + flow2 + flow3:
  if(sumZone << flowMain){ //flow in < flow out
    //update status to Leak between sensed points
    }
   else if(sumZone >> flowMain){ //flow in > flow out
    //update status to be a Leak after valve sensor
    }
   else{ //flow in = flow out
   }
  
  //DISPLAY INFO----------
  //value to write
  //write into print function
  }
}

void ConnectToWiFi(){ //custom Wifi Function
  WiFi.mode(WIFI_STA);
  WiFi.begin(SSID, WiFiPassword); //Netword and Password targets
  Serial.print("Connecting to "); Serial.println(SSID);
 
  uint8_t i = 0;
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print('.');
    delay(500);
 
    if ((++i % 16) == 0)
    {
      Serial.println(F(" still trying to connect"));
    }
  }
  Serial.print(F("Connected. My IP address is: "));
  Serial.println(WiFi.localIP());
}
