//Articuno Systems
//Project Manager: Bradley Hartman
//Hardware Engineer: Dylan Hromcik
//Integration Engineer: Nathan Armstrong
//Software Engineer: Hyun Ki David Lee
//---------------
//Made by Hyun Ki David Lee
//main

#include WiFi.h // ESP32 WiFi include

void setup(){
//SETUP PINS----------
  pinMode(##, OUT): //Set Relay1 pin to OUT
  pinMode(##, OUT): //Set Relay2 pin to OUT
  pinMode(##, OUT): //Set Relay3 pin to OUT
  pinMode(##, OUT): //Set Relay4 pin to OUT
  pinMode(##, OUT):
//SETUP VARIABLES----------
  float flowMain = 0.000; //Flow Rate from Main
  float flow1 = 0.000; //Flow Rate from Zone 2
  float flow2 = 0.000; //Flow Rate from Zone 3
  float flow3 = 0.000; //Flow Rate from Zone 4
  float sumZone = 0.000; //Flow Rate for Sum of Zones
//CONNECT TO WIFI----------
  Serial.begin(9600);
  ConnectToWiFi();
}

//--------------------------------
void loop(){
//COLLECT WEATHER DATA----------
  //check wifi connection
  //if no connection (notfiy user)
  //else, download weather data
//UPDATE FLOW RATE DATA----------
  //import flow data from sensor controller (needs research)
  flowMain = ___ //update flow data for Main Pipe
  flow1 = ___ //update flow data for Zone 1
  flow2 = ___ //update flow data for Zone 2
  flow3 = ___ //update flow data for Zone 3
//FREEZE CHECK----------
  if("Temperature below freezing){ //Temperature is too cold
  Serial.write("Conducting Freeze Purge. \n") //Serial message
  digitalWrite(##, HIGH): //Turn ON Purge Status LED
  digitalWrite(##, HIGH): //Turn ON Compressor Relay
  delay(#0000): //Runs purge mode for # amount of time
  Serial.write("Ending Freeze Purge. \n") //Serial message
  digitalWrite(##, LOW): //Turn OFF Purge Status LED
  digitalWrite(##, LOW): //Turn OFF Compressor Relay
  }
  else{ //Temperature is warm enough
  //WATERING CHECK----------
    if("time since last watering > #"){ //Enough time has passed since the last watering
      Serial.write("Conducting Watering. \n") //Serial message
      digitalWrite(##, HIGH): //Open Valve 1
      digitalWrite(##, HIGH): //Open Valve 2
      digitalWrite(##, HIGH): //Open Valve 3
      digitalWrite(##, HIGH): //Open Valve 4
      delay(#00000) //Run water cycle for # amount of time
      Serial.write("Finished with Watering. \n") //Serial message
      digitalWrite(##, LOW): //Close Valve 1
      digitalWrite(##, LOW): //Close Valve 2
      digitalWrite(##, LOW): //Close Valve 3
      digitalWrite(##, LOW): //Close Valve 4
    }
    else{
    }
  //LEAK & CLOG CHECK----------
  sumZone = flow1 + flow2 + flow3:
  if(sumZone /= flowMain)
  //DISPLAY INFO----------
  }
}

void ConnectToWiFi() //custom Wifi Function
{
 
  WiFi.mode(WIFI_STA);
  WiFi.begin(SSID, WiFiPassword); //Netword and Password targets
  Serial.print("Connecting to "); Serial.println(SSID);
 
  uint8_t i = 0;
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print('.');
    delay(500);
 
    if ((++i % 16) == 0)
    {
      Serial.println(F(" still trying to connect"));
    }
  }
 
  Serial.print(F("Connected. My IP address is: "));
  Serial.println(WiFi.localIP());
}
